<Window x:Class="Simulator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="WolfNet 6502 WorkBench Computer Emulator" Height="768" Width="1024"
		DataContext="{Binding Main, Source={StaticResource Locator}}" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" WindowState="Normal" Background="DarkGray">

    <Window.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="3.5,0" />
            <Setter Property="Margin" Value="3.5" />
            <Setter Property="MinWidth" Value="80" />
        </Style>

        <!-- This Style inherits from the Button style seen above. -->
        <Style BasedOn="{StaticResource {x:Type Button}}"  TargetType="{x:Type Button}" x:Key="RunButtonStyle">
            <Setter Property="Content" Value="Run" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                    <Setter Property="Content" Value="Pause" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                    <Setter Property="Content" Value="Run" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="MemoryMapColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{ StaticResource ColumnHeaderStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="MinHeight" Value="24"/>
        </Style>

        <Style x:Key="MemoryMapContentCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource CellStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="MinWidth" Value="30"/>
        </Style>

    </Window.Resources>

    <Grid Width="1024" Margin="11,4,0,4" HorizontalAlignment="Left">

        <DataGrid Height="247" HorizontalAlignment="Left" Margin="62,442,0,0" Name="OutputLog" VerticalAlignment="Top" MaxWidth="800" Width="Auto" AutoGenerateColumns="False" 
					CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserDeleteRows="False"
					CanUserAddRows="False" ItemsSource="{Binding OutputLog}" CellStyle="{StaticResource CellStyle}" GridLinesVisibility="Horizontal">
            <DataGrid.Columns>
                <DataGridTextColumn Header="PC" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding ProgramCounter, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="" Width="Auto" MinWidth="50" CanUserResize="False" IsReadOnly="True" Binding="{Binding CurrentOpCode, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding LowAddress, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding HighAddress, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="" Width="Auto" MinWidth="60" CanUserResize="False" IsReadOnly="True" Binding="{Binding OpCodeString, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="" Width="Auto" MinWidth="80" CanUserResize="False" IsReadOnly="True" Binding="{Binding DisassemblyOutput, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="A" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding Accumulator, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="X" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding XRegister, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="Y" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding YRegister, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="SP" Width="Auto" MinWidth="40" CanUserResize="False" IsReadOnly="True" Binding="{Binding StackPointer, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridTextColumn Header="CycleCount" MinWidth="200" Width="Auto" CanUserResize="False" IsReadOnly="True" Binding="{Binding NumberOfCycles, Mode=OneWay}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
            </DataGrid.Columns>
        </DataGrid>

        <Button Content="Save" Height="23" HorizontalAlignment="Left" Margin="158,416,0,0" Name="SaveState" VerticalAlignment="Top" Width="75" FontSize="14" Command="{Binding Path= SaveStateCommand}" IsEnabled="{Binding Path=IsProgramLoaded}" />
        <Button Height="23" HorizontalAlignment="Left" Margin="256,416,0,0" Name="Run" VerticalAlignment="Top" Width="75" FontSize="14" Command="{Binding Path= RunPauseCommand}" IsEnabled="{Binding Path=IsProgramLoaded}" Style="{StaticResource RunButtonStyle}" />
        <Button Content="Step" FontSize="14" Height="23" HorizontalAlignment="Left" Margin="353,416,0,0" Name="Step" VerticalAlignment="Top" Width="75" Command="{Binding Path= StepCommand}" IsEnabled="{Binding Path=IsProgramLoaded}" />
        <Button Content="Reset" FontSize="14" Height="23" HorizontalAlignment="Left" Margin="451,416,0,0" Name="Reset" VerticalAlignment="Top" Width="75" Command="{Binding Path= ResetCommand}" IsEnabled="{Binding Path=IsProgramLoaded}" />
        <Button Content="Load" FontSize="14" Height="23" HorizontalAlignment="Left" Margin="62,416,0,0" Name="Load" VerticalAlignment="Top" Width="75" Command="{Binding Path=OpenCommand}" />

        <TextBlock Height="23" HorizontalAlignment="Left" Margin="49,29,0,0" Name="FilePathText" Text="{Binding Path=FilePath}" VerticalAlignment="Top" Width="630" FontSize="14" />
        <TextBox Height="23" HorizontalAlignment="Left" Margin="147,329,0,0" Name="CurrentPage" Text="{Binding Path=MemoryPageOffset, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="72" >
            <TextBox.InputBindings>
                <KeyBinding Command="{Binding Path=UpdateMemoryMapCommand}" Key="Enter"/>
            </TextBox.InputBindings>
        </TextBox>
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="49,329,0,0" Name="CurrentPageText" Text="Current Page:" VerticalAlignment="Top" Width="86" />
        <DataGrid Height="247" HorizontalAlignment="Left" Margin="49,41,0,0" x:Name="Breakpoints" VerticalAlignment="Top" MaxWidth="800" Width="546" AutoGenerateColumns="False" 
			CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserResizeColumns="False" CanUserDeleteRows="False"
			CanUserAddRows="False" ItemsSource="{Binding Breakpoints}" CellStyle="{StaticResource CellStyle}" GridLinesVisibility="Horizontal" SelectedItem="{Binding SelectedBreakpoint}">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="Enabled" Width="Auto" MinWidth="70" CanUserResize="False" Binding="{Binding IsEnabled}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
                <DataGridComboBoxColumn Header="Type" Width="Auto" MinWidth="240" CanUserResize="False" SelectedItemBinding="{Binding Type}" HeaderStyle="{StaticResource ColumnHeaderStyle}">
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                            <Setter Property="ItemsSource" Value="{Binding AllTypes}"/>
                            <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                            <Setter Property="IsReadOnly" Value="True"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                            <Setter Property="ItemsSource" Value="{Binding AllTypes}"/>
                            <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <DataGridTextColumn Header="Value (Hex)" Width="Auto" MinWidth="240" CanUserResize="False" Binding="{Binding Value}" HeaderStyle="{StaticResource ColumnHeaderStyle}" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add A New Breakpoint" Command="{Binding Path=AddBreakPointCommand}">
                        <MenuItem.Icon>
                            <Image Source="Images\add.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Remove Selected Breakpoint" Command="{Binding Path=RemoveBreakPointCommand}">
                        <MenuItem.Icon>
                            <Image Source="Images\remove.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <Button Content="IRQ" FontSize="14" Height="23" HorizontalAlignment="Left" Margin="552,416,0,0" x:Name="InterruptRequest" VerticalAlignment="Top" Width="75" Command="{Binding SendInterruptRequestCommand}" IsEnabled="{Binding IsProgramLoaded}" />
        <Button Content="NMI" FontSize="14" Height="23" HorizontalAlignment="Left" Margin="654,416,0,0" x:Name="NonMaskableInterrupt" VerticalAlignment="Top" Width="75" Command="{Binding SendNonMaskableInterruptComand}" IsEnabled="{Binding IsProgramLoaded}" />
        <TextBox Height="23" HorizontalAlignment="Right" Margin="0,157,128,0" x:Name="YRegister" VerticalAlignment="Top" Width="60" Text="{Binding Proc.YRegister, Mode=OneWay, StringFormat=X}"/>
        <TextBox Height="23" HorizontalAlignment="Right" Margin="0,157,233,0" x:Name="XRegister" VerticalAlignment="Top" Width="60" Text="{Binding Proc.XRegister, Mode=OneWay, StringFormat=X}" />
        <TextBox Height="23" HorizontalAlignment="Right" Margin="0,159,337,0" x:Name="Accumulator" VerticalAlignment="Top" Width="60" Text="{Binding Proc.Accumulator, Mode=OneWay, StringFormat=X}" />
        <TextBox Height="23" HorizontalAlignment="Right" Margin="0,159,32,0" x:Name="StackPointer" VerticalAlignment="Top" Width="60" Text="{Binding Proc.StackPointer, Mode=OneWay, StringFormat=X}"/>
        <TextBox Height="23" HorizontalAlignment="Right" Margin="0,86,263,0" x:Name="ProgramCounter" VerticalAlignment="Top" Width="134" Text="{Binding Proc.ProgramCounter, Mode=OneWay, StringFormat=X}" />
        <TextBox Height="23" HorizontalAlignment="Right" Margin="0,86,75,0" x:Name="Dissambly" VerticalAlignment="Top" Width="134" Text="{Binding CurrentDisassembly, Mode=OneWay}"  />
        <TextBox Height="23" HorizontalAlignment="Right" Margin="0,284,262,0" x:Name="CycleCount" VerticalAlignment="Top" Width="134" Text="{Binding NumberOfCycles, Mode=OneWay}" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Right" Margin="0,139,284,0" x:Name="XRegisterText" Text="X" VerticalAlignment="Top" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Right" Margin="0,139,180,0" x:Name="YRegisterText" Text="Y" VerticalAlignment="Top" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Right" Margin="0,139,75,0" x:Name="StackPointerRegisterText" Text="SP" VerticalAlignment="Top" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Right" Margin="0,139,387,0" x:Name="AText" Text="A" VerticalAlignment="Top" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Right" Margin="0,66,91,0" x:Name="CurrentInstructionText" Text="Current Instruction" VerticalAlignment="Top" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Right" Margin="0,66,379,0" x:Name="ProgramCounterText" Text="PC" VerticalAlignment="Top" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="629,265,0,0" x:Name="CycleCountText" Text="Cycle Count" VerticalAlignment="Top" />
        <CheckBox Height="16" HorizontalAlignment="Left" Margin="858,226,0,0" x:Name="CarryFlag" VerticalAlignment="Top" IsChecked="{Binding Proc.CarryFlag, Mode=OneWay}" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="858,206,0,0" x:Name="CarryFlagText" Text="C" VerticalAlignment="Top" />
        <CheckBox Height="16" HorizontalAlignment="Left" Margin="820,226,0,0" x:Name="ZeroFlag" VerticalAlignment="Top" IsChecked="{Binding Proc.ZeroFlag, Mode=OneWay}" />
        <TextBlock FontSize="14" HorizontalAlignment="Left" Margin="820,206,0,0" x:Name="ZeroFlagText" Text="Z" Height="23" VerticalAlignment="Top" />
        <CheckBox Height="16" HorizontalAlignment="Left" Margin="782,226,0,0" x:Name="InterrupFlag" VerticalAlignment="Top" IsChecked="{Binding Proc.DisableInterruptFlag, Mode=OneWay}" />
        <TextBlock FontSize="14" HorizontalAlignment="Left" Margin="782,206,0,0" x:Name="InterruptFlagText" Text="I" Height="23" VerticalAlignment="Top" />
        <CheckBox Height="16" HorizontalAlignment="Left" Margin="743,226,0,0" x:Name="BcdFlag" VerticalAlignment="Top" IsChecked="{Binding Proc.DecimalFlag, Mode=OneWay}" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="743,206,0,0" x:Name="BcdFlagText" Text="D" VerticalAlignment="Top" />
        <CheckBox Height="16" HorizontalAlignment="Left" Margin="705,226,0,0" x:Name="BreakFlag" VerticalAlignment="Top" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="705,206,0,0" x:Name="BreakFlagText" Text="B" VerticalAlignment="Top" />
        <CheckBox Height="16" HorizontalAlignment="Left" Margin="667,226,0,0" x:Name="OverflowFlag" VerticalAlignment="Top" IsChecked="{Binding Proc.OverflowFlag, Mode=OneWay}" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="667,206,0,0" x:Name="OverflowFlagText" Text="V" VerticalAlignment="Top" />
        <CheckBox Height="16" HorizontalAlignment="Left" Margin="629,226,0,0" x:Name="NegativeFlag" VerticalAlignment="Top" IsChecked="{Binding Proc.NegativeFlag, Mode=OneWay}" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="629,206,0,0" x:Name="NegativeFlagText" Text="N" VerticalAlignment="Top" />
        <Slider Height="23" HorizontalAlignment="Left" Margin="815,284,0,0" x:Name="CpuSpeed" VerticalAlignment="Top" Width="100" Value="{Binding CpuSpeed}" />
        <TextBlock FontSize="14" Height="23" HorizontalAlignment="Left" Margin="815,265,0,0" x:Name="SpeedText" Text="CPU Speed S-&gt;F" VerticalAlignment="Top" />
    </Grid>
</Window>
