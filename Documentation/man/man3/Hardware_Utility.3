.TH "Hardware.Utility" 3 "Sat Sep 24 2022" "Version beta" "WolfNet 6502 WorkBench Computer Emulator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Hardware.Utility
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static string \fBConvertOpCodeIntoString\fP (this int i)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB5\fP of file \fBUtility\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static string Hardware\&.Utility\&.ConvertOpCodeIntoString (this int i)\fC [inline]\fP, \fC [static]\fP"

.PP
Definition at line \fB7\fP of file \fBUtility\&.cs\fP\&.
.PP
.nf
8         {
9             switch (i)
10             {
11                 case 0x69:  // ADC Immediate
12                 case 0x65:  // ADC Zero Page
13                 case 0x75:  // ADC Zero Page X
14                 case 0x6D:  // ADC Absolute
15                 case 0x7D:  // ADC Absolute X
16                 case 0x79:  // ADC Absolute Y
17                 case 0x61:  // ADC Indrect X
18                 case 0x71:  // ADC Indirect Y
19                     {
20                         return "ADC";
21                     }
22                 case 0x29:  // AND Immediate
23                 case 0x25:  // AND Zero Page
24                 case 0x35:  // AND Zero Page X
25                 case 0x2D:  // AND Absolute
26                 case 0x3D:  // AND Absolute X
27                 case 0x39:  // AND Absolute Y
28                 case 0x21:  // AND Indirect X
29                 case 0x31:  // AND Indirect Y
30                     {
31                         return "AND";
32                     }
33                 case 0x0A:  // ASL Accumulator
34                 case 0x06:  // ASL Zero Page
35                 case 0x16:  // ASL Zero Page X
36                 case 0x0E:  // ASL Absolute
37                 case 0x1E:  // ASL Absolute X
38                     {
39                         return "ASL";
40                     }
41                 case 0x90:  // BCC Relative
42                     {
43                         return "BCC";
44                     }
45                 case 0xB0:  // BCS Relative
46                     {
47                         return "BCS";
48                     }
49                 case 0xF0:  // BEQ Relative
50                     {
51                         return "BEQ";
52                     }
53                 case 0x24:  // BIT Zero Page    
54                 case 0x2C:  // BIT Absolute
55                     {
56                         return "BIT";
57                     }
58                 case 0x30:  // BMI Relative
59                     {
60                         return "BMI";
61                     }
62                 case 0xD0:  // BNE Relative
63                     {
64                         return "BNE";
65                     }
66                 case 0x10:  // BPL Relative
67                     {
68                         return "BPL";
69                     }
70                 case 0x00:  // BRK Implied
71                     {
72                         return "BRK";
73                     }
74                 case 0x50: // BVC Relative
75                     {
76                         return "BCV";
77                     }
78                 case 0x70: //BVS Relative
79                     {
80                         return "BVS";
81                     }
82                 case 0x18:  // CLC Implied
83                     {
84                         return "CLC";
85                     }
86                 case 0xD8:  // CLD Implied
87                     {
88                         return "CLD";
89                     }
90                 case 0x58:  // CLI Implied
91                     {
92                         return "CLI";
93                     }
94                 case 0xB8:  // CLV Implied
95                     {
96                         return "CLV";
97                     }
98                 case 0xC9:  // CMP Immediate
99                 case 0xC5:  // CMP ZeroPage
100                 case 0xD5:  // CMP Zero Page X
101                 case 0xCD:  // CMP Absolute
102                 case 0xDD:  // CMP Absolute X
103                 case 0xD9:  // CMP Absolute Y
104                 case 0xC1:  // CMP Indirect X
105                 case 0xD1:  // CMP Indirect Y
106                     {
107                         return "CMP";
108                     }
109                 case 0xE0:  // CPX Immediate
110                 case 0xE4:  // CPX ZeroPage
111                 case 0xEC:  // CPX Absolute
112                     {
113                         return "CPX";
114                     }
115                 case 0xC0:  // CPY Immediate
116                 case 0xC4:  // CPY ZeroPage
117                 case 0xCC:  // CPY Absolute
118                     {
119                         return "CPY";
120                     }
121                 case 0xC6:  // DEC Zero Page
122                 case 0xD6:  // DEC Zero Page X
123                 case 0xCE:  // DEC Absolute
124                 case 0xDE:  // DEC Absolute X
125                     {
126                         return "DEC";
127                     }
128                 case 0xCA:  // DEX Implied
129                     {
130                         return "DEX";
131                     }
132                 case 0x88:  // DEY Implied
133                     {
134                         return "DEY";
135                     }
136                 case 0x49:  // EOR Immediate
137                 case 0x45:  // EOR Zero Page
138                 case 0x55:  // EOR Zero Page X
139                 case 0x4D:  // EOR Absolute
140                 case 0x5D:  // EOR Absolute X
141                 case 0x59:  // EOR Absolute Y
142                 case 0x41:  // EOR Indrect X
143                 case 0x51:  // EOR Indirect Y
144                     {
145                         return "EOR";
146                     }
147                 case 0xE6:  // INC Zero Page
148                 case 0xF6:  // INC Zero Page X
149                     {
150                         return "INC";
151                     }
152                 case 0xE8:  // INX Implied
153                     {
154                         return "INX";
155                     }
156                 case 0xC8:  // INY Implied
157                     {
158                         return "INY";
159                     }
160                 case 0xEE:  // INC Absolute
161                 case 0xFE:  // INC Absolute X
162                     {
163                         return "INC";
164                     }
165                 case 0x4C:  // JMP Absolute
166                 case 0x6C:  // JMP Indirect
167                     {
168                         return "JMP";
169                     }
170                 case 0x20:  // JSR Absolute
171                     {
172                         return "JSR";
173                     }
174                 case 0xA9:  // LDA Immediate
175                 case 0xA5:  // LDA Zero Page
176                 case 0xB5:  // LDA Zero Page X
177                 case 0xAD:  // LDA Absolute
178                 case 0xBD:  // LDA Absolute X
179                 case 0xB9:  // LDA Absolute Y
180                 case 0xA1:  // LDA Indirect X
181                 case 0xB1:  // LDA Indirect Y
182                     {
183                         return "LDA";
184                     }
185                 case 0xA2:  // LDX Immediate
186                 case 0xA6:  // LDX Zero Page
187                 case 0xB6:  // LDX Zero Page Y
188                 case 0xAE:  // LDX Absolute
189                 case 0xBE:  // LDX Absolute Y
190                     {
191                         return "LDX";
192                     }
193                 case 0xA0:  // LDY Immediate
194                 case 0xA4:  // LDY Zero Page
195                 case 0xB4:  // LDY Zero Page Y
196                 case 0xAC:  // LDY Absolute
197                 case 0xBC:  // LDY Absolute Y
198                     {
199                         return "LDY";
200                     }
201                 case 0x4A:  // LSR Accumulator
202                 case 0x46:  // LSR Zero Page
203                 case 0x56:  // LSR Zero Page X
204                 case 0x4E:  // LSR Absolute
205                 case 0x5E:  // LSR Absolute X
206                     {
207                         return "LSR";
208                     }
209                 case 0xEA:  // NOP Implied
210                     {
211                         return "NOP";
212                     }
213                 case 0x09:  // ORA Immediate
214                 case 0x05:  // ORA Zero Page
215                 case 0x15:  // ORA Zero Page X
216                 case 0x0D:  // ORA Absolute
217                 case 0x1D:  // ORA Absolute X
218                 case 0x19:  // ORA Absolute Y
219                 case 0x01:  // ORA Indirect X
220                 case 0x11:  // ORA Indirect Y
221                     {
222                         return "ORA";
223                     }
224                 case 0x48:  // PHA Implied
225                     {
226                         return "PHA";
227                     }
228                 case 0x08:  // PHP Implied
229                     {
230                         return "PHP";
231                     }
232                 case 0x68:  // PLA Implied
233                     {
234                         return "PLA";
235                     }
236                 case 0x28:  // PLP Implied
237                     {
238                         return "PLP";
239                     }
240                 case 0x2A:  // ROL Accumulator
241                 case 0x26:  // ROL Zero Page
242                 case 0x36:  // ROL Zero Page X
243                 case 0x2E:  // ROL Absolute
244                 case 0x3E:  // ROL Absolute X
245                     {
246                         return "ROL";
247                     }
248                 case 0x6A:  // ROR Accumulator
249                 case 0x66:  // ROR Zero Page
250                 case 0x76:  // ROR Zero Page X
251                 case 0x6E:  // ROR Absolute
252                 case 0x7E:  // ROR Absolute X
253                     {
254                         return "ROR";
255                     }
256                 case 0x40:  // RTI Implied
257                     {
258                         return "RTI";
259                     }
260                 case 0x60:  // RTS Implied
261                     {
262                         return "RTS";
263                     }
264                 case 0xE9:  // SBC Immediate
265                 case 0xE5:  // SBC Zero Page
266                 case 0xF5:  // SBC Zero Page X
267                 case 0xED:  // SBC Absolute
268                 case 0xFD:  // SBC Absolute X
269                 case 0xF9:  // SBC Absolute Y
270                 case 0xE1:  // SBC Indrect X
271                 case 0xF1:  // SBC Indirect Y
272                     {
273                         return "SBC";
274                     }
275                 case 0x38:  // SEC Implied
276                     {
277                         return "SEC";
278                     }
279                 case 0xF8:  // SED Implied
280                     {
281                         return "SED";
282                     }
283                 case 0x78:  // SEI Implied
284                     {
285                         return "SEI";
286                     }
287                 case 0x85:  // STA ZeroPage
288                 case 0x95:  // STA Zero Page X
289                 case 0x8D:  // STA Absolute
290                 case 0x9D:  // STA Absolute X
291                 case 0x99:  // STA Absolute Y
292                 case 0x81:  // STA Indirect X
293                 case 0x91:  // STA Indirect Y
294                     {
295                         return "STA";
296                     }
297                 case 0x86:  // STX Zero Page
298                 case 0x96:  // STX Zero Page Y
299                 case 0x8E:  // STX Absolute
300                     {
301                         return "STX";
302                     }
303                 case 0x84:  // STY Zero Page
304                 case 0x94:  // STY Zero Page X
305                 case 0x8C:  // STY Absolute
306                     {
307                         return "STY";
308                     }
309                 case 0xAA:  // TAX Implied
310                     {
311                         return "TAX";
312                     }
313                 case 0xA8:  // TAY Implied
314                     {
315                         return "TAY";
316                     }
317                 case 0xBA:  // TSX Implied
318                     {
319                         return "TSX";
320                     }
321                 case 0x8A:  // TXA Implied
322                     {
323                         return "TXA";
324                     }
325                 case 0x9A:  // TXS Implied
326                     {
327                         return "TXS";
328                     }
329                 case 0x98:  // TYA Implied
330                     {
331                         return "TYA";
332                     }
333                 default:
334                     throw new InvalidEnumArgumentException(string\&.Format("A Valid Conversion does not exist for OpCode {0}", i\&.ToString("X")));
335 
336             }
337         }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for WolfNet 6502 WorkBench Computer Emulator from the source code\&.
